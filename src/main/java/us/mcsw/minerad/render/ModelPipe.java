// Date: 12/8/2015 4:06:39 PM
// Template version 1.1
// Java generated by Techne

package us.mcsw.minerad.render;

import java.awt.Color;

import org.lwjgl.opengl.GL11;

import javafx.scene.transform.Shear;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraftforge.common.util.ForgeDirection;
import us.mcsw.minerad.tiles.TilePipe;

public class ModelPipe extends ModelBase {
	// fields
	ModelRenderer ShapeCenter;
	ModelRenderer ShapeTop;
	ModelRenderer ShapeBottom;
	ModelRenderer ShapeWest;
	ModelRenderer ShapeEast;
	ModelRenderer ShapeSouth;
	ModelRenderer ShapeNorth;

	public ModelPipe() {
		textureWidth = 64;
		textureHeight = 32;

		ShapeCenter = new ModelRenderer(this, 0, 0);
		ShapeCenter.addBox(-2F, -2F, -2F, 4, 4, 4);
		ShapeCenter.setRotationPoint(0F, 16F, 0F);
		ShapeCenter.setTextureSize(64, 32);
		ShapeCenter.mirror = true;
		setRotation(ShapeCenter, 0F, 0F, 0F);
		ShapeTop = new ModelRenderer(this, 18, 0);
		ShapeTop.addBox(-1F, 0F, -1F, 3, 6, 3);
		ShapeTop.setRotationPoint(-0.5F, 8F, -0.5333334F);
		ShapeTop.setTextureSize(64, 32);
		ShapeTop.mirror = true;
		setRotation(ShapeTop, 0F, 0F, 0F);
		ShapeBottom = new ModelRenderer(this, 18, 0);
		ShapeBottom.addBox(-1F, 0F, -1F, 3, 6, 3);
		ShapeBottom.setRotationPoint(-0.5F, 18F, -0.5F);
		ShapeBottom.setTextureSize(64, 32);
		ShapeBottom.mirror = true;
		setRotation(ShapeBottom, 0F, 0F, 0F);
		ShapeWest = new ModelRenderer(this, 18, 0);
		ShapeWest.addBox(-1F, 0F, -1F, 3, 6, 3);
		ShapeWest.setRotationPoint(2F, 16.5F, -0.5F);
		ShapeWest.setTextureSize(64, 32);
		ShapeWest.mirror = true;
		setRotation(ShapeWest, 0F, 0F, -1.570796F);
		ShapeEast = new ModelRenderer(this, 18, 0);
		ShapeEast.addBox(-2F, 0F, -1F, 3, 6, 3);
		ShapeEast.setRotationPoint(-2F, 16.5F, -0.5F);
		ShapeEast.setTextureSize(64, 32);
		ShapeEast.mirror = true;
		setRotation(ShapeEast, 0F, 0F, 1.570796F);
		ShapeSouth = new ModelRenderer(this, 18, 0);
		ShapeSouth.addBox(-1F, 0F, -1F, 3, 6, 3);
		ShapeSouth.setRotationPoint(-0.5F, 16.5F, 2F);
		ShapeSouth.setTextureSize(64, 32);
		ShapeSouth.mirror = true;
		setRotation(ShapeSouth, 1.570796F, 0F, 0F);
		ShapeNorth = new ModelRenderer(this, 18, 0);
		ShapeNorth.addBox(-1F, 0F, -1F, 3, 6, 3);
		ShapeNorth.setRotationPoint(-0.5F, 15.5F, -2F);
		ShapeNorth.setTextureSize(64, 32);
		ShapeNorth.mirror = true;
		setRotation(ShapeNorth, -1.570796F, 0F, 0F);
	}

	int colourSideInput = 0x6677bb, colourSideOutput = 0x885533;

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5, TilePipe tp) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);

		Color in = new Color(colourSideInput);
		Color out = new Color(colourSideOutput);

		byte[] ci = { (byte) in.getRed(), (byte) in.getGreen(), (byte) in.getBlue() };
		byte[] co = { (byte) out.getRed(), (byte) out.getGreen(), (byte) out.getBlue() };

		byte[] cs = { 1, 1, 1 };
		if (tp.getTier() != null) {
			Color tc = new Color(tp.getTier().getColour());
			GL11.glColor3ub(cs[0] = (byte) tc.getRed(), cs[1] = (byte) tc.getGreen(), cs[2] = (byte) tc.getBlue());
		}
		ShapeCenter.render(f5);

		ModelRenderer[] parts = { ShapeTop, ShapeBottom, ShapeWest, ShapeEast, ShapeSouth, ShapeNorth };
		ForgeDirection[] sides = { ForgeDirection.UP, ForgeDirection.DOWN, ForgeDirection.WEST, ForgeDirection.EAST,
				ForgeDirection.SOUTH, ForgeDirection.NORTH };
		for (int i = 0; i < 6; i++) {
			ForgeDirection side = sides[i];

			parts[i].isHidden = !tp.isConnected(side);
			if (tp.isConnectedToProvider(side)) {
				GL11.glColor3ub(ci[0], ci[1], ci[2]);
			} else if (tp.isConnectedToReceiver(side)) {
				GL11.glColor3ub(co[0], co[1], co[2]);
			} else {
				GL11.glColor3ub(cs[0], cs[1], cs[2]);
			}
			parts[i].render(f5);
		}
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}

}
